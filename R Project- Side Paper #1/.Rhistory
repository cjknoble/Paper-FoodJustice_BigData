# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
library(ggplot2)
# Make NAME a factor
spatial_data_long$NAME <- as.factor(spatial_data_long$NAME)
y <- spatial_data_long$TB
# Create the scatter plot with smoothed lines using ggplot2
ggplot(spatial_data_long, aes(x = HsW, y = y, color = NAME)) +
geom_point() +  # Add scatter points
geom_smooth(method = "loess", se = FALSE) +  # Add smoothed lines
labs(title = "Scatter Plot Colored and Smoothed by NAME",
x = "HsW") +
theme_minimal()  # Use a minimal theme
gb.fm.p <- HsW ~ BIPOC + AGE +  poly(TB, 2) #Fixed, time, lag
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
gb.fm.p <- HsW ~ BIPOC + AGE + poly(McD,2)
#spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_Simp")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 26July2024", "DMAs_CirculatoryER_CensusData_GTrends_V4_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
# #McD
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC + AGE + McD #Fixed, time, lag
gb.fm.p <- HsW ~ BIPOC + AGE + poly(McD,2)
spatial_data <- spatial_data[, c("NAME",
"Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", "Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
"P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19", "P_AGE20", "P_AGE21", "P_AGE22",
"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22")]
spatial_data <- spatial_data %>% filter(NAME != "Eureka, CA"
& NAME != "Medford-Klamath Falls, OR"
& NAME!= "Chico-Redding, CA")
# Convert sf object to data.frame
spatial_coord <- st_coordinates(st_centroid(spatial_data))
spatial_data_df <- as.data.frame(spatial_data)
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
# Check dep variable
plot(density(spatial_data_p$HsW)) # Log
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Print models summaries
summary(fe_model)
# Estimate a pooled OLS model
pool.mod <- plm(gb.fm.p, data = spatial_data_p, model = "pooling")
# Test for individual effects
plmtest(pool.mod, effect = "individual") # individual_effects_test
# Test for time effects
plmtest(pool.mod, effect = "time") # time_effects_test
# Test for Two-Ways:
plmtest(pool.mod, effect = "twoways") # twoways_effects_test
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
# Fixed effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lml") # Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lme") # Error Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlml") # R Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlme") # R Error Fixed
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
gb.splm.time.fixed <- spml(formula = gb.fm.p,
data = spatial_data_p,
listw = gb.listw,
model = "within",
effect = "time",
lag = TRUE,
spatial.error = "none")
summary(gb.splm.time.fixed)
View(spatial_data)
# #McD
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC + AGE + McD #Fixed, time, lag
spatial_data <- spatial_data[, c("NAME",
"Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", "Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
"P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19", "P_AGE20", "P_AGE21", "P_AGE22",
"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22")]
spatial_data <- spatial_data %>% filter(NAME != "Eureka, CA"
& NAME != "Medford-Klamath Falls, OR"
& NAME!= "Chico-Redding, CA")
# Convert sf object to data.frame
spatial_coord <- st_coordinates(st_centroid(spatial_data))
spatial_data_df <- as.data.frame(spatial_data)
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Estimate a pooled OLS model
pool.mod <- plm(gb.fm.p, data = spatial_data_p, model = "pooling")
# Test for individual effects
plmtest(pool.mod, effect = "individual") # individual_effects_test
# Test for time effects
plmtest(pool.mod, effect = "time") # time_effects_test
# Test for Two-Ways:
plmtest(pool.mod, effect = "twoways") # twoways_effects_test
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
# Fixed effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lml") # Lag Fixed
gb.splm.time.fixed <- spml(formula = gb.fm.p,
data = spatial_data_p,
listw = gb.listw,
model = "within",
effect = "time",
lag = TRUE,
spatial.error = "none")
summary(gb.splm.time.fixed)
#spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_Simp")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 26July2024", "DMAs_CirculatoryER_CensusData_GTrends_V4_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
# #McD
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC + AGE + McD #Fixed, time, lag
spatial_data <- spatial_data[, c("NAME",
"Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", "Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
"P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19", "P_AGE20", "P_AGE21", "P_AGE22",
"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22")]
spatial_data <- spatial_data %>% filter(NAME == "Los Angeles, CA" |
NAME == "Fresno-Visalia, CA" |
NAME == "Sacramento-Stockton-Modesto, CA" |
NAME == "San Diego, CA" |
NAME == "San Francisco-Oakland-San Jose, CA")
# Convert sf object to data.frame
spatial_coord <- st_coordinates(st_centroid(spatial_data))
spatial_data_df <- as.data.frame(spatial_data)
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
# Check dep variable
plot(density(spatial_data_p$HsW)) # Log
library(ggplot2)
# Make NAME a factor
spatial_data_long$NAME <- as.factor(spatial_data_long$NAME)
y <- spatial_data_long$BIPOC
y <- spatial_data_long$AGE
y <- spatial_data_long$McD
# Create the scatter plot with smoothed lines using ggplot2
ggplot(spatial_data_long, aes(x = HsW, y = y, color = NAME)) +
geom_point() +  # Add scatter points
geom_smooth(method = "loess", se = FALSE) +  # Add smoothed lines
labs(title = "Scatter Plot Colored and Smoothed by NAME",
x = "HsW") +
theme_minimal()  # Use a minimal theme
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Estimate a pooled OLS model
pool.mod <- plm(gb.fm.p, data = spatial_data_p, model = "pooling")
# Test for individual effects
plmtest(pool.mod, effect = "individual") # individual_effects_test
# Test for time effects
plmtest(pool.mod, effect = "time") # time_effects_test
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
# Fixed effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lml") # Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lme") # Error Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlml") # R Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlme") # R Error Fixed
gb.splm.time.fixed <- spml(formula = gb.fm.p,
data = spatial_data_p,
listw = gb.listw,
model = "within",
effect = "time",
lag = TRUE,
spatial.error = "none")
summary(gb.splm.time.fixed)
library(spdep)
library(sp)
library(ggplot2)
library(spatstat)
library(classInt)
library(dplyr)
library(plm)
library(splm)
library(reshape2)
library(sf)
library(tidyverse)
#spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_Simp")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 26July2024", "DMAs_CirculatoryER_CensusData_GTrends_V4_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
# #McD
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC + AGE + McD #Fixed, time, lag
# #McD
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC + AGE + McD #Fixed, time, lag
spatial_data <- spatial_data[, c("NAME",
"Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", #"Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
"P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19",# "P_AGE20", "P_AGE21", "P_AGE22",
"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", #"P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD16",	"McD17",	"McD18",	"McD19")]
spatial_data <- spatial_data %>% filter(NAME != "Eureka, CA"
& NAME != "Medford-Klamath Falls, OR"
& NAME!= "Chico-Redding, CA")
# Convert sf object to data.frame
spatial_coord <- st_coordinates(st_centroid(spatial_data))
spatial_data_df <- as.data.frame(spatial_data)
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
# Check dep variable
plot(density(spatial_data_p$HsW)) # Log
# Plotting
scatter.smooth(spatial_data_p$HsW, spatial_data_p$BIPOC) # Log
scatter.smooth(spatial_data_p$HsW, spatial_data_p$AGE) # Log maybe but none
scatter.smooth(spatial_data_p$HsW, spatial_data_p$McD) # None # Drop Eureka?
library(ggplot2)
# Make NAME a factor
spatial_data_long$NAME <- as.factor(spatial_data_long$NAME)
y <- spatial_data_long$BIPOC
# Create the scatter plot with smoothed lines using ggplot2
ggplot(spatial_data_long, aes(x = HsW, y = y, color = NAME)) +
geom_point() +  # Add scatter points
geom_smooth(method = "loess", se = FALSE) +  # Add smoothed lines
labs(title = "Scatter Plot Colored and Smoothed by NAME",
x = "HsW") +
theme_minimal()  # Use a minimal theme
y <- spatial_data_long$McD
# Create the scatter plot with smoothed lines using ggplot2
ggplot(spatial_data_long, aes(x = HsW, y = y, color = NAME)) +
geom_point() +  # Add scatter points
geom_smooth(method = "loess", se = FALSE) +  # Add smoothed lines
labs(title = "Scatter Plot Colored and Smoothed by NAME",
x = "HsW") +
theme_minimal()  # Use a minimal theme
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Estimate a pooled OLS model
pool.mod <- plm(gb.fm.p, data = spatial_data_p, model = "pooling")
# Test for individual effects
plmtest(pool.mod, effect = "individual") # individual_effects_test
# Test for time effects
plmtest(pool.mod, effect = "time") # time_effects_test
# Test for Two-Ways:
plmtest(pool.mod, effect = "twoways") # twoways_effects_test
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
gb.splm.time.fixed <- spml(formula = gb.fm.p,
data = spatial_data_p,
listw = gb.listw,
model = "within",
effect = "time",
lag = TRUE,
spatial.error = "none")
summary(gb.splm.time.fixed)
#spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_Simp")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 26July2024", "DMAs_CirculatoryER_CensusData_GTrends_V4_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
library(spdep)
library(sp)
library(ggplot2)
library(spatstat)
library(classInt)
library(dplyr)
library(plm)
library(splm)
library(reshape2)
library(sf)
library(tidyverse)
#spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_Simp")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 26July2024", "DMAs_CirculatoryER_CensusData_GTrends_V4_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
# #McD
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC + McD #Fixed, time, lag
spatial_data <- spatial_data[, c("NAME",
"Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", "Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
#"P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19", "P_AGE20", "P_AGE21", "P_AGE22",
"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22")]
spatial_data <- spatial_data %>% filter(NAME != "Eureka, CA"
& NAME != "Medford-Klamath Falls, OR"
& NAME!= "Chico-Redding, CA")
# Convert sf object to data.frame
spatial_coord <- st_coordinates(st_centroid(spatial_data))
spatial_data_df <- as.data.frame(spatial_data)
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
# Check dep variable
plot(density(spatial_data_p$HsW)) # Log
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Estimate a pooled OLS model
pool.mod <- plm(gb.fm.p, data = spatial_data_p, model = "pooling")
# Test for individual effects
plmtest(pool.mod, effect = "individual") # individual_effects_test
# Test for time effects
plmtest(pool.mod, effect = "time") # time_effects_test
# Test for Two-Ways:
plmtest(pool.mod, effect = "twoways") # twoways_effects_test
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
# Fixed effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lml") # Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lme") # Error Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlml") # R Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlme") # R Error Fixed
# Random effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "lml") # Lag Random
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "lme") # Error Random
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "rlml") # R Lag Random
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "rlme") # R Error Random
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
gb.splm.time.fixed <- spml(formula = gb.fm.p,
data = spatial_data_p,
listw = gb.listw,
model = "within",
effect = "time",
lag = TRUE,
spatial.error = "none")
summary(gb.splm.time.fixed)
# TB
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + TB # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC +   TB #Fixed, time, lag
spatial_data <- spatial_data[, c("NAME",
#"P_AGE14", "P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19", "P_AGE20", "P_AGE21", "P_AGE22",
"Circ_HsW14", "Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", "Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
"P_BIPOC14",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"TB14",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22")]
#spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_Simp")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 26July2024", "DMAs_CirculatoryER_CensusData_GTrends_V4_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
# TB
#gb.fm.p <- CircWtd ~ BIPOC + Hsptls + TB # Individual, Time, ~pooled, Lag
gb.fm.p <- HsW ~ BIPOC +   TB #Fixed, time, lag
spatial_data <- spatial_data[, c("NAME",
#"P_AGE14", "P_AGE16",	"P_AGE17",	"P_AGE18",	"P_AGE19", "P_AGE20", "P_AGE21", "P_AGE22",
"Circ_HsW14", "Circ_HsW16",	"Circ_HsW17",	"Circ_HsW18", "Circ_HsW19", "Circ_HsW20", "Circ_HsW21", "Circ_HsW22",
"P_BIPOC14",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"TB14",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22")]
spatial_data <- spatial_data %>% filter(NAME != "Eureka, CA"
& NAME != "Yuma, AZ-El Centro, CA"
& NAME != "Monterey-Salinas, CA"
& NAME != "Palm Springs, CA"
& NAME != "Santa Barbara-Santa Maria-San Luis Obispo, CA"
& NAME != "Reno, NV"
& NAME != "Bakersfield, CA"
& NAME != "Chico-Redding, CA"
& NAME != "Medford-Klamath Falls, OR")
# Convert sf object to data.frame
spatial_coord <- st_coordinates(st_centroid(spatial_data))
spatial_data_df <- as.data.frame(spatial_data)
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Log Transform Indep Variables
spatial_data_long$BIPOC <- log(spatial_data_long$BIPOC)
# Standardize dep variable
spatial_data_long <- spatial_data_long %>% mutate(HsW = as.numeric(scale(HsW)))
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within") # fe_model
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random") # re_model
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways") # tw_model
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Estimate a pooled OLS model
pool.mod <- plm(gb.fm.p, data = spatial_data_p, model = "pooling")
# Test for individual effects
plmtest(pool.mod, effect = "individual") # individual_effects_test
# Test for time effects
plmtest(pool.mod, effect = "time") # time_effects_test
# Test for Two-Ways:
plmtest(pool.mod, effect = "twoways") # twoways_effects_test
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
# Fixed effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lml") # Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "lme") # Error Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlml") # R Lag Fixed
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "within", test = "rlme") # R Error Fixed
# Random effect models:
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "lml") # Lag Random
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "lme") # Error Random
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "rlml") # R Lag Random
slmtest (gb.fm.p, data = spatial_data_p, listw = gb.listw, model = "random", test = "rlme") # R Error Random
gb.listw <- nb2listw(poly2nb(spatial_data), style = "W")
gb.splm.time.fixed <- spml(formula = gb.fm.p,
data = spatial_data_p,
listw = gb.listw,
model = "within",
effect = "time",
lag = TRUE,
spatial.error = "none")
summary(gb.splm.time.fixed)
y <- spatial_data_long$TB
# Create the scatter plot with smoothed lines using ggplot2
ggplot(spatial_data_long, aes(x = HsW, y = y, color = NAME)) +
geom_point() +  # Add scatter points
geom_smooth(method = "loess", se = FALSE) +  # Add smoothed lines
labs(title = "Scatter Plot Colored and Smoothed by NAME",
x = "HsW") +
theme_minimal()  # Use a minimal theme
scatter.smooth(spatial_data_p$HsW, spatial_data_p$TB) # Log? # Drop Eurerka,Yuma?
