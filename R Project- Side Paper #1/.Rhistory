csv_files[1]
### 2017-2019
# Define the directory containing the Excel files
folder_path <- "C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/DATA/Census/Census Table DP05 2010-2022 (Tract)/New folder (2017-2019)"
# Get a list of all Excel files in the directory
csv_files <- list.files(path = folder_path, pattern = ".csv", full.names = TRUE)
# Initialize an empty list to store data frames
data_list <- list()
# Loop through each CSV file
for (file in csv_files) {
# Read the CSV file
data <- read.csv(file)
# Select the required columns
data <- data %>% select( # consider grabbing all estimates to manually calculate percentages later
GEO_ID,
NAME,
Estimate__SEX_AND_AGE__Total_population,
Estimate__SEX_AND_AGE__Total_population__Under_5_years,
Estimate__SEX_AND_AGE__Total_population__5_to_9_years,
Estimate__SEX_AND_AGE__Total_population__10_to_14_years,
Estimate__SEX_AND_AGE__Total_population__15_to_19_years,
Estimate__SEX_AND_AGE__Total_population__20_to_24_years,
Estimate__SEX_AND_AGE__Total_population__25_to_34_years,
Estimate__HISPANIC_OR_LATINO_AND_RACE__Total_population,
Estimate__HISPANIC_OR_LATINO_AND_RACE__Total_population__Not_Hispanic_or_Latino__White_alone
)
# Convert the necessary columns to numeric
data <- data %>%
mutate_at(vars(Estimate__SEX_AND_AGE__Total_population:Estimate__HISPANIC_OR_LATINO_AND_RACE__Total_population__Not_Hispanic_or_Latino__White_alone), as.numeric)
# Rename the columns
colnames(data) <- c(
"GEO_ID",
"NAME",
"E_Total_population_SX_AGE",
"Est_SX_AGE_Under_5_years",
"Est_SX_AGE_5_to_9_years",
"Est_SX_AGE_10_to_14_years",
"Est_SX_AGE_15_to_19_years",
"Est_SX_AGE_20_to_24_years",
"Est_SX_AGE_25_to_34_years",
"E_HSPNC_Total_population",
"E_NOTHSPNC_White_alone"
)
# Create the new column Est_SX_AGE_Under35
data <- data %>%
mutate(E_Under35_SX_AGE = Est_SX_AGE_Under_5_years +
Est_SX_AGE_5_to_9_years +
Est_SX_AGE_10_to_14_years +
Est_SX_AGE_15_to_19_years +
Est_SX_AGE_20_to_24_years +
Est_SX_AGE_25_to_34_years)
data <- data %>% select (
-NAME,
-Est_SX_AGE_Under_5_years,
-Est_SX_AGE_5_to_9_years,
-Est_SX_AGE_10_to_14_years,
-Est_SX_AGE_15_to_19_years,
-Est_SX_AGE_20_to_24_years,
-Est_SX_AGE_25_to_34_years,
)
# Append the file name to each column name
file_name <- gsub(".csv", "", basename(file))
cols_to_rename <- 2:ncol(data)
colnames(data)[cols_to_rename] <- paste0(colnames(data)[cols_to_rename], "_", file_name)
final_data <- full_join(final_data, data, by ="GEO_ID")
}
# Save the final merged data frame to a CSV file
write.csv(final_data, "C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/DATA/Census/Census Data - Selected Joins (2010-2019) V2.csv", row.names = TRUE)
# Initialize data frame of geoids to store results
final_data <- read.csv(csv_files[1]) %>% select("GEO_ID")
# Define the directory containing the Excel files
folder_path <- "C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/DATA/Census/Census Table DP05 2010-2022 (Tract)/New folder (2020+)"
# Get a list of all Excel files in the directory
csv_files <- list.files(path = folder_path, pattern = ".csv", full.names = TRUE)
csv_files[1]
# Initialize an empty list to store data frames
data_list <- list()
# Loop through each CSV file
for (file in csv_files) {
# Read the CSV file
data <- read.csv(file)
# Select the required columns
data <- data %>% select( # consider grabbing all estimates to manually calculate percentages later
GEO_ID,
NAME,
Estimate__SEX_AND_AGE__Total_population,
Estimate__SEX_AND_AGE__Total_population__Under_5_years,
Estimate__SEX_AND_AGE__Total_population__5_to_9_years,
Estimate__SEX_AND_AGE__Total_population__10_to_14_years,
Estimate__SEX_AND_AGE__Total_population__15_to_19_years,
Estimate__SEX_AND_AGE__Total_population__20_to_24_years,
Estimate__SEX_AND_AGE__Total_population__25_to_34_years,
Estimate__HISPANIC_OR_LATINO_AND_RACE__Total_population,
Estimate__HISPANIC_OR_LATINO_AND_RACE__Total_population__Not_Hispanic_or_Latino__White_alone
)
# Convert the necessary columns to numeric
data <- data %>%
mutate_at(vars(Estimate__SEX_AND_AGE__Total_population:Estimate__HISPANIC_OR_LATINO_AND_RACE__Total_population__Not_Hispanic_or_Latino__White_alone), as.numeric)
# Rename the columns
colnames(data) <- c(
"GEO_ID",
"NAME",
"E_Total_population_SX_AGE",
"Est_SX_AGE_Under_5_years",
"Est_SX_AGE_5_to_9_years",
"Est_SX_AGE_10_to_14_years",
"Est_SX_AGE_15_to_19_years",
"Est_SX_AGE_20_to_24_years",
"Est_SX_AGE_25_to_34_years",
"E_HSPNC_Total_population",
"E_NOTHSPNC_White_alone"
)
# Create the new column Est_SX_AGE_Under35
data <- data %>%
mutate(E_Under35_SX_AGE = Est_SX_AGE_Under_5_years +
Est_SX_AGE_5_to_9_years +
Est_SX_AGE_10_to_14_years +
Est_SX_AGE_15_to_19_years +
Est_SX_AGE_20_to_24_years +
Est_SX_AGE_25_to_34_years)
data <- data %>% select (
-NAME,
-Est_SX_AGE_Under_5_years,
-Est_SX_AGE_5_to_9_years,
-Est_SX_AGE_10_to_14_years,
-Est_SX_AGE_15_to_19_years,
-Est_SX_AGE_20_to_24_years,
-Est_SX_AGE_25_to_34_years,
)
# Append the file name to each column name
file_name <- gsub(".csv", "", basename(file))
cols_to_rename <- 2:ncol(data)
colnames(data)[cols_to_rename] <- paste0(colnames(data)[cols_to_rename], "_", file_name)
final_data <- full_join(final_data, data, by ="GEO_ID")
}
# Save the final merged data frame to a CSV file
write.csv(final_data, "C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/DATA/Census/Census Data - Selected Joins (2020-2022) V2.csv", row.names = TRUE)
library(spdep)
library(sp)
library(ggplot2)
library(spatstat)
library(classInt)
library(dplyr)
library(plm)
library(splm)
library(reshape2)
library(sf)
library(tidyverse)
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
View(spatial_data)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
library(spdep)
library(sp)
library(ggplot2)
library(spatstat)
library(classInt)
library(dplyr)
library(plm)
library(splm)
library(reshape2)
library(sf)
library(tidyverse)
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
library(spdep)
library(sp)
library(ggplot2)
library(spatstat)
library(classInt)
library(dplyr)
library(plm)
library(splm)
library(reshape2)
library(sf)
library(tidyverse)
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
#"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c(#"NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
#"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
#"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
#"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC121", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_")
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_")
library(spdep)
library(sp)
library(ggplot2)
library(spatstat)
library(classInt)
library(dplyr)
library(plm)
library(splm)
library(reshape2)
library(sf)
library(tidyverse)
spatial_data <- st_read("C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/Shapefile with All Data 10July2024", "DMAs_CirculatoryER_CensusData_GTrends_")
# Sort Names Alphabetically
spatial_data <- spatial_data %>% arrange(NAME)
spatial_coord <- st_coordinates(st_centroid(spatial_data))
# Convert sf object to data.frame
spatial_data_df <- as.data.frame(spatial_data)
# Extract only the needed data for panel regression:
spatial_data_df <- spatial_data_df[, c("NAME",
"Hsptls10",	"Hsptls11",	"Hsptls12",	"Hsptls13",	"Hsptls14",	"Hsptls16",	"Hsptls17",	"Hsptls18",	"Hsptls19",	"Hsptls20",	"Hsptls21",	"Hsptls22",
"CircWtd10",	"CircWtd11",	"CircWtd12",	"CircWtd13",	"CircWtd14",	"CircWtd15",	"CircWtd16",	"CircWtd17",	"CircWtd18", "CircWtd19", "CircWtd20", "CircWtd21", "CircWtd22",
"P_BIPOC10",	"P_BIPOC11",	"P_BIPOC12",	"P_BIPOC13",	"P_BIPOC14",	"P_BIPOC15",	"P_BIPOC16",	"P_BIPOC17",	"P_BIPOC18",	"P_BIPOC19", "P_BIPOC20", "P_BIPOC21", "P_BIPOC22",
"McD15",	"McD16",	"McD17",	"McD18",	"McD19",	"McD20",	"McD21",	"McD22",
"TB14",	"TB15",	"TB16",	"TB17",	"TB18",	"TB19",	"TB20",	"TB21",	"TB22",
"BK17",	"BK18",	"BK19",	"BK20",	"BK21",	"BK22",
"JITB19",	"JITB20",	"JITB21",	"JITB22",
"KFC18",	"KFC19",	"KFC20",	"KFC21",	"KFC22")]
# Reshape the data to long format
spatial_data_long <- spatial_data_df %>%
pivot_longer(-NAME,
names_to = c(".value", "Year"),
names_pattern = "([A-Za-z]+)([0-9]+)",
values_drop_na = TRUE)
View(spatial_data_long)
# Correct the year values
spatial_data_long$Year <- paste0("20", spatial_data_long$Year)
# Drop year with no data for circulatory
spatial_data_long <- subset(spatial_data_long, Year != 2015)
# Creating a pdata.frame
spatial_data_p <- pdata.frame(spatial_data_long, index = c("NAME", "Year"))
View(spatial_data_p)
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + McD
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + TB
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + BK
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + JITB
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + BK
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + JITB
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
gb.fm.p <- CircWtd ~ BIPOC + Hsptls + KFC
# Fit Fixed Effects, Random Effects, and Two-Ways Models
fe_model <- plm(gb.fm.p, data = spatial_data_p, model = "within")
re_model <- plm(gb.fm.p, data = spatial_data_p, model = "random")
tw_model <- plm(gb.fm.p, data = spatial_data_p, effect = "twoways")
# Conduct Hausman Test between Fixed Effects and Random Effects Models
hausman_test <- phtest(fe_model, re_model)
# Print models summaries
summary(fe_model)
summary(re_model)
summary(tw_model)
# Print Hausman Test result
print(hausman_test) #Null hypothesis is that a random effect model should be used, alternative is a fixed effects model
