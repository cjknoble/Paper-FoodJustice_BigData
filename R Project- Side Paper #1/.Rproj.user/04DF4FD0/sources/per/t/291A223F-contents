
library(readxl)
library(dplyr)
library(writexl)

# Define the directory containing the Excel files
directory <- "C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/DATA/Hosptial Emergency Department - Characteristics by Facility"

# Get a list of all Excel files in the directory
file_list <- list.files(path = directory, pattern = ".csv", full.names = TRUE)

# Initialize an empty list to store data frames
df_list <- list()

# Loop through each file and read the data into a data frame
for (file in file_list) {
  df <- read.csv(file)
  df_list[[length(df_list) + 1]] <- df
}

# Standardize column names by reordering them based on the first file's columns
base_columns <- colnames(df_list[[1]])

# Get data types of the first data frame's columns
base_col_types <- sapply(df_list[[1]], class)

# Function to standardize columns and types
standardize_columns <- function(df, base_columns, base_col_types) {
  
  # Identify missing columns
  missing_cols <- setdiff(base_columns, colnames(df))
  
  # Add missing columns with NA values
  df[missing_cols] <- NA
  
  # Reorder columns to match the base columns
  df <- df %>% select(all_of(base_columns))
  
  # Convert columns to the correct data types
  for (col in base_columns) {
    if (base_col_types[[col]] == "numeric") {
      df[[col]] <- as.numeric(df[[col]])
    } else if (base_col_types[[col]] == "character") {
      df[[col]] <- as.character(df[[col]])
    } else if (base_col_types[[col]] == "integer") {
      df[[col]] <- as.integer(df[[col]])
    } else if (base_col_types[[col]] == "logical") {
      df[[col]] <- as.logical(df[[col]])
    }
  }
  
  return(df)
}

# Apply the standardization function to all data frames
df_list <- lapply(df_list, standardize_columns, base_columns, base_col_types)

# Combine all data frames into one
combined_df <- bind_rows(df_list)

# Define the output file path
output_file <- "C:/Users/cjkno/Documents/My Documents/Classes - '23 Spring/Research/Paper (Side) #1/DATA/Hosptial Emergency Department - Characteristics by Facility/COMBINED.xlsx"

# Write the combined data frame to a new Excel file
write_xlsx(combined_df, output_file)

